From a625cca43e792b5470c79a0c01801ff62d403fda Mon Sep 17 00:00:00 2001
From: anders <anders@debian-32.hemma>
Date: Fri, 28 Jul 2017 16:01:05 +0200
Subject: [PATCH 1/3] Replaced int/float union type punning in bcf_float_set &
 co with a reinterpret cast.

---
 htslib/vcf.h | 15 ++++++---------
 1 file changed, 6 insertions(+), 9 deletions(-)

diff --git a/htslib/vcf.h b/htslib/vcf.h
index 4ee873949..6bba4f7e7 100644
--- a/htslib/vcf.h
+++ b/htslib/vcf.h
@@ -877,23 +877,20 @@ extern uint32_t bcf_float_vector_end;
 extern uint32_t bcf_float_missing;
 static inline void bcf_float_set(float *ptr, uint32_t value)
 {
-    union { uint32_t i; float f; } u;
-    u.i = value;
-    *ptr = u.f;
+    uint32_t *pf = (uint32_t*)ptr;
+    *pf = value;
 }
 #define bcf_float_set_vector_end(x) bcf_float_set(&(x),bcf_float_vector_end)
 #define bcf_float_set_missing(x)    bcf_float_set(&(x),bcf_float_missing)
 static inline int bcf_float_is_missing(float f)
 {
-    union { uint32_t i; float f; } u;
-    u.f = f;
-    return u.i==bcf_float_missing ? 1 : 0;
+    uint32_t *pf = (uint32_t*)&f;
+    return *pf==bcf_float_missing ? 1 : 0;
 }
 static inline int bcf_float_is_vector_end(float f)
 {
-    union { uint32_t i; float f; } u;
-    u.f = f;
-    return u.i==bcf_float_vector_end ? 1 : 0;
+    uint32_t *pf = (uint32_t*)&f;
+    return *pf==bcf_float_vector_end ? 1 : 0;
 }
 
 static inline void bcf_format_gt(bcf_fmt_t *fmt, int isample, kstring_t *str)

From 02b937e730740d79794c0bc45b5db874f598353c Mon Sep 17 00:00:00 2001
From: anders <anders@debian-32.hemma>
Date: Fri, 28 Jul 2017 16:09:10 +0200
Subject: [PATCH 2/3] Fixed padding of vector_end values in the
 test-vcf-api::write_format_values test case.

---
 test/test-vcf-api.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/test/test-vcf-api.c b/test/test-vcf-api.c
index 0e1bdca70..1782d5dbc 100644
--- a/test/test-vcf-api.c
+++ b/test/test-vcf-api.c
@@ -330,6 +330,7 @@ void write_format_values(const char *fname)
     bcf_float_set_missing(test[0]);
     test[1] = 47.11f;
     bcf_float_set_vector_end(test[2]);
+    bcf_float_set_vector_end(test[3]);
     bcf_update_format_float(hdr, rec, "TF", test, 4);
     bcf_write1(fp, hdr, rec);
 

From 84e2cd6fa4a7a6787ab0713b9372720f1f2ee339 Mon Sep 17 00:00:00 2001
From: anders <anders@debian-32.hemma>
Date: Fri, 28 Jul 2017 16:15:16 +0200
Subject: [PATCH 3/3] Refactoring to handle ints instead of floats as much as
 possible.

---
 htslib/vcf.h | 13 +++++--------
 1 file changed, 5 insertions(+), 8 deletions(-)

diff --git a/htslib/vcf.h b/htslib/vcf.h
index 6bba4f7e7..dc5aacc06 100644
--- a/htslib/vcf.h
+++ b/htslib/vcf.h
@@ -882,15 +882,12 @@ static inline void bcf_float_set(float *ptr, uint32_t value)
 }
 #define bcf_float_set_vector_end(x) bcf_float_set(&(x),bcf_float_vector_end)
 #define bcf_float_set_missing(x)    bcf_float_set(&(x),bcf_float_missing)
-static inline int bcf_float_is_missing(float f)
+#define bcf_float_is_vector_end(x) bcf_float_equals(&(x),bcf_float_vector_end)
+#define bcf_float_is_missing(x)    bcf_float_equals(&(x),bcf_float_missing)
+static inline int bcf_float_equals(const float *ptr, uint32_t value)
 {
-    uint32_t *pf = (uint32_t*)&f;
-    return *pf==bcf_float_missing ? 1 : 0;
-}
-static inline int bcf_float_is_vector_end(float f)
-{
-    uint32_t *pf = (uint32_t*)&f;
-    return *pf==bcf_float_vector_end ? 1 : 0;
+    uint32_t *pf = (uint32_t*)ptr;
+    return *pf==value ? 1 : 0;
 }
 
 static inline void bcf_format_gt(bcf_fmt_t *fmt, int isample, kstring_t *str)
